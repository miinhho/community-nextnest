{
  "name": "backend",
  "version": "0.0.1",
  "description": "",
  "author": "miinhho",
  "private": true,
  "license": "MIT",
  "scripts": {
    "build": "nest build && pnpm sentry:sourcemaps",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "cross-env NODE_ENV=development nest start",
    "start:dev": "cross-env NODE_ENV=development nest start --watch",
    "start:debug": "cross-env NODE_ENV=development nest start --debug --watch",
    "start:prod": "cross-env NODE_ENV=development node dist/main",
    "db:dev:migrate": "cross-env NODE_ENV=development && npx prisma migrate dev",
    "db:dev:reset": "cross-env NODE_ENV=development npx prisma migrate reset",
    "db:prod:migrate": "npx prisma migrate reset",
    "db:prod:reset": "npx prisma migrate reset",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "pnpm run docker:test:up && npx prisma migrate deploy && jest --config ./test/jest-e2e.json",
    "docker:test:up": "docker compose -f docker-compose.test.yml up -d",
    "docker:test:down": "docker compose -f docker-compose.test.yml down",
    "docker:dev": "pnpm build && ./scripts/dev-deploy.sh",
    "docker:prod": "pnpm build && ./scripts/prod-deploy.sh",
    "sentry:sourcemaps": "sentry-cli sourcemaps inject --org jang-minho --project community-main-api ./dist && sentry-cli sourcemaps upload --org jang-minho --project community-main-api ./dist"
  },
  "dependencies": {
    "@liaoliaots/nestjs-redis": "^10.0.0",
    "@nestjs/bullmq": "^11.0.3",
    "@nestjs/cache-manager": "^3.0.1",
    "@nestjs/common": "^11.1.6",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.6",
    "@nestjs/event-emitter": "^3.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.6",
    "@nestjs/platform-socket.io": "^11.1.6",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/terminus": "^11.0.0",
    "@nestjs/websockets": "^11.1.6",
    "@prisma/adapter-pg": "^6.13.0",
    "@prisma/client": "^6.13.0",
    "@sentry/cli": "^2.51.1",
    "@sentry/nestjs": "^10.4.0",
    "bcrypt": "^6.0.0",
    "bullmq": "^5.56.10",
    "cache-manager": "^7.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "cookie-parser": "^1.4.7",
    "es-toolkit": "^1.39.10",
    "express": "^5.1.0",
    "helmet": "^8.1.0",
    "ioredis": "^5.7.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "prisma": "^6.13.0",
    "prisma-error-enum": "^0.1.3",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "socket.io": "^4.8.1"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.33.0",
    "@golevelup/ts-jest": "^0.7.0",
    "@nestjs/cli": "^11.0.10",
    "@nestjs/schematics": "^11.0.7",
    "@nestjs/testing": "^11.1.6",
    "@types/bcrypt": "^5.0.2",
    "@types/cookie-parser": "^1.4.9",
    "@types/express": "^5.0.3",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.17.1",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^6.0.3",
    "cross-env": "^10.0.0",
    "eslint": "^9.33.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "globals": "^16.3.0",
    "jest": "^29.7.0",
    "prettier": "^3.6.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.4",
    "ts-jest": "^29.4.1",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.9.2",
    "typescript-eslint": "^8.39.1"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "moduleNameMapper": {
      "^@/(.*)$": "<rootDir>/$1"
    },
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
