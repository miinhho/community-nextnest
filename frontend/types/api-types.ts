/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/post": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 게시글 목록 조회
         * @description 모든 게시글 목록을 페이지네이션으로 조회합니다. 비공개 게시글은 작성자와 팔로워만 조회할 수 있습니다.
         */
        get: operations["PostController_findPosts"];
        put?: never;
        /**
         * 게시글 생성
         * @description 새로운 게시글을 작성합니다.
         */
        post: operations["PostController_createPost"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/post/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 게시글 조회
         * @description ID로 특정 게시글의 상세 정보를 조회합니다. 게시글이 비공개인 경우, 해당 게시글의 작성자와 팔로워인 사용자만 조회할 수 있습니다.
         */
        get: operations["PostController_findPostById"];
        /**
         * 게시글 수정
         * @description 기존 게시글의 내용을 수정합니다.
         */
        put: operations["PostController_updatePost"];
        post?: never;
        /**
         * 게시글 삭제
         * @description 게시글을 삭제합니다.
         */
        delete: operations["PostController_deletePost"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/post/{id}/like": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 게시글 좋아요 토글
         * @description 게시글의 좋아요 상태를 토글합니다. 비공개 게시글은 작성자와 팔로워만 좋아요를 토글할 수 있습니다.
         */
        post: operations["PostController_toggleLike"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/{id}/posts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 사용자 게시글 목록 조회
         * @description 특정 사용자가 작성한 게시글 목록을 페이지네이션으로 조회합니다. 비공개 사용자인 경우, 해당 사용자의 팔로워만 조회할 수 있습니다.
         */
        get: operations["PostController_getUserPosts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/{id}/privacy": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 사용자 공개 여부 조회
         * @description 사용자의 공개 여부를 조회합니다.
         */
        get: operations["PrivateController_getUserIsPrivate"];
        put?: never;
        /**
         * 사용자 공개 여부 수정
         * @description 사용자의 공개 여부를 수정합니다.
         */
        post: operations["PrivateController_updateUserPrivacy"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/block": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 사용자 차단
         * @description 특정 사용자를 차단합니다. 차단된 사용자는 차단한 사용자로부터의 모든 상호작용이 제한됩니다.
         */
        post: operations["BlockController_blockUser"];
        /**
         * 사용자 차단 해제
         * @description 차단된 사용자의 차단을 해제합니다.
         */
        delete: operations["BlockController_unblockUser"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 현재 사용자 정보 조회
         * @description 현재 로그인한 사용자의 정보를 조회합니다.
         */
        get: operations["UserController_getMyInfo"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 사용자 조회
         * @description ID로 특정 사용자의 정보를 조회합니다. 비공개 사용자의 경우, 요청자가 팔로우한 사용자만 조회할 수 있습니다.
         */
        get: operations["UserController_getUserById"];
        put?: never;
        post?: never;
        /**
         * 사용자 삭제
         * @description 사용자 계정을 삭제합니다.
         */
        delete: operations["UserController_deleteUser"];
        options?: never;
        head?: never;
        /**
         * 사용자 정보 수정
         * @description 사용자의 프로필 정보를 수정합니다.
         */
        patch: operations["UserController_updateUser"];
        trace?: never;
    };
    "/comment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * 댓글 수정
         * @description 기존 댓글의 내용을 수정합니다.
         */
        put: operations["CommentController_updateComment"];
        /**
         * 댓글 생성
         * @description 게시글에 새로운 댓글을 작성합니다.
         */
        post: operations["CommentController_createComment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/comment/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 댓글 조회
         * @description ID로 특정 댓글의 상세 정보를 조회합니다. 차단된 사용자의 댓글은 제외됩니다.
         */
        get: operations["CommentController_getCommentById"];
        put?: never;
        post?: never;
        /**
         * 댓글 삭제
         * @description 댓글을 삭제합니다.
         */
        delete: operations["CommentController_deleteComment"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/comment/{id}/replies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 댓글 답글 목록 조회
         * @description 특정 댓글의 답글 목록을 페이지네이션으로 조회합니다. 차단된 사용자의 댓글은 제외됩니다.
         */
        get: operations["CommentController_getCommentReplies"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/comment/{id}/like": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 댓글 좋아요 토글
         * @description 댓글의 좋아요 상태를 토글합니다.
         */
        post: operations["CommentController_toggleCommentLike"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reply": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 답글 생성
         * @description 댓글에 답글을 작성합니다.
         */
        post: operations["CommentController_createCommentReply"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/post/{id}/comments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 게시글 댓글 목록 조회
         * @description 특정 게시글의 댓글 목록을 페이지네이션으로 조회합니다. 차단된 사용자의 댓글은 제외됩니다.
         */
        get: operations["CommentController_getCommentsByPostId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/{id}/comments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 사용자 댓글 목록 조회
         * @description 특정 사용자가 작성한 댓글 목록을 페이지네이션으로 조회합니다. 차단된 사용자의 댓글은 제외됩니다.
         */
        get: operations["CommentController_getCommentsByUserId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/{id}/follow": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 팔로우 토글
         * @description 사용자의 팔로우 상태를 토글합니다.
         */
        post: operations["FollowController_toggleFollowUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/{id}/follow/request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 팔로우 요청
         * @description 사용자에게 팔로우 요청을 보냅니다.
         */
        post: operations["FollowController_sendFollowRequest"];
        /**
         * 팔로우 요청 거절
         * @description 사용자의 팔로우 요청을 거절합니다.
         */
        delete: operations["FollowController_rejectFollowRequest"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/{id}/following-count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 팔로잉 수 조회
         * @description 특정 사용자가 팔로우하는 사용자 수를 조회합니다.
         */
        get: operations["FollowController_getUserFollowingCount"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/{id}/followers-count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 팔로워 수 조회
         * @description 특정 사용자의 팔로워 수를 조회합니다.
         */
        get: operations["FollowController_getUserFollowersCount"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/{id}/followers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 팔로워 목록 조회
         * @description 특정 사용자의 팔로워 목록을 페이지네이션으로 조회합니다.
         */
        get: operations["FollowController_getUserFollowers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/{id}/following": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 팔로잉 목록 조회
         * @description 특정 사용자가 팔로우하는 사용자 목록을 페이지네이션으로 조회합니다.
         */
        get: operations["FollowController_getUserFollowing"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 회원가입
         * @description 새로운 사용자 계정을 생성합니다.
         */
        post: operations["AuthController_register"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 로그인
         * @description 이메일과 비밀번호로 로그인합니다.
         */
        post: operations["AuthController_login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/logout": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 로그아웃
         * @description 현재 세션을 종료하고 로그아웃합니다.
         */
        post: operations["AuthController_logout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 토큰 갱신
         * @description 만료된 액세스 토큰을 갱신합니다.
         */
        post: operations["AuthController_refresh"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/health": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 애플리케이션 상태 확인
         * @description 애플리케이션과 데이터베이스의 상태를 확인합니다.
         */
        get: operations["HealthController_check"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notify/user/read-all": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 사용자 알람 목록 조회
         * @description 특정 사용자의 알람 목록을 조회합니다.
         */
        patch: operations["NotifyController_readAllNotifiesByUserId"];
        trace?: never;
    };
    "/notify/user/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 사용자 알람 목록 조회
         * @description 특정 사용자의 알람 목록을 조회합니다.
         */
        get: operations["NotifyController_getNotifiesByUserId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notify/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 알람 상세 조회
         * @description 특정 알람의 상세 정보를 조회합니다.
         */
        get: operations["NotifyController_getNotifyById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notify/{id}/read": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 알람 상세 조회
         * @description 특정 알람의 상세 정보를 조회합니다.
         */
        patch: operations["NotifyController_readNotifyById"];
        trace?: never;
    };
    "/notify/sse": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 알림 SSE 스트림
         * @description 사용자의 알림을 SSE로 스트리밍합니다. 클라이언트는 이 엔드포인트를 통해 실시간으로 알림을 받을 수 있습니다.
         */
        get: operations["NotifySseController_stream"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        PostContentDto: {
            /** @description 댓글 내용 */
            content: string;
        };
        UpdateUserDto: {
            /** @description 사용자 이름 */
            name?: string;
            /**
             * Format: uri
             * @description 사용자 이미지 URL
             */
            image?: string | null;
        };
        CreateCommentDto: {
            /**
             * @description 댓글이 달릴 게시글의 ID
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            postId: string;
            /** @description 댓글 내용 */
            content: string;
        };
        UpdateCommentDto: {
            /**
             * @description 수정할 댓글의 ID
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            commentId: string;
            /** @description 댓글 내용 */
            content: string;
        };
        ReplyContentDto: {
            /**
             * @description 답글이 달릴 게시글의 ID
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            postId: string;
            /**
             * @description 답글이 달릴 댓글의 ID
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            commentId: string;
            /** @description 댓글 내용 */
            content: string;
        };
        RegisterUserDto: {
            /** @description 사용자 이메일 */
            email: string;
            /** @description 사용자 비밀번호 */
            password: string;
            /** @description 사용자 이름 */
            name: string;
        };
        LoginUserDto: {
            /** @description 사용자 이메일 */
            email: string;
            /** @description 사용자 비밀번호 */
            password: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    PostController_findPosts: {
        parameters: {
            query?: {
                /** @description 페이지 번호 (기본값: 1) */
                page?: number;
                /** @description 페이지당 수 (기본값: 10) */
                size?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 게시글 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            posts?: {
                                id?: string;
                                content?: string;
                                likeCount?: number;
                                createdAt?: string;
                                updatedAt?: string;
                                commentCount?: number;
                                author?: {
                                    id?: string;
                                    name?: string;
                                    image?: string | null;
                                };
                            }[];
                        };
                        meta?: {
                            /** @description 전체 항목 수 */
                            totalCount: number;
                            /** @description 전체 페이지 수 */
                            pageCount: number;
                            /** @description 현재 페이지 */
                            currentPage: number;
                            /** @description 페이지당 항목 수 */
                            pageSize: number;
                        };
                    };
                };
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PostController_createPost: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description 게시글 생성 요청 데이터 */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PostContentDto"];
            };
        };
        responses: {
            /** @description 게시글 생성 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            postId?: string;
                            authorId?: string;
                        };
                    };
                };
            };
        };
    };
    PostController_findPostById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 게시글 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 게시글 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            id?: string;
                            content?: string;
                            likeCount?: number;
                            createdAt?: string;
                            updatedAt?: string;
                            author?: {
                                id?: string;
                                name?: string;
                                image?: string | null;
                            };
                            commentCount?: number;
                        };
                    };
                };
            };
            /** @description 인증되지 않은 사용자 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 존재하지 않는 게시글 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PostController_updatePost: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 게시글 ID */
                id: string;
            };
            cookie?: never;
        };
        /** @description 게시글 생성 요청 데이터 */
        requestBody: {
            content: {
                "application/json": components["schemas"]["PostContentDto"];
            };
        };
        responses: {
            /** @description 게시글 수정 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            id?: string;
                            authorId?: string;
                            content?: string;
                        };
                    };
                };
            };
            /** @description 인증되지 않은 사용자 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 존재하지 않는 게시글 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PostController_deletePost: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 게시글 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 게시글 삭제 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            id?: string;
                            authorId?: string;
                            content?: string;
                        };
                    };
                };
            };
            /** @description 인증되지 않은 사용자 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 존재하지 않는 게시글 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PostController_toggleLike: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 게시글 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 게시글 좋아요 토글 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        message?: string;
                        data?: {
                            /** @enum {string} */
                            status?: "PLUS" | "MINUS";
                            id?: string;
                        };
                    };
                };
            };
            /** @description 인증되지 않은 사용자 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 존재하지 않는 게시글 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PostController_getUserPosts: {
        parameters: {
            query?: {
                /** @description 페이지 번호 (기본값: 1) */
                page?: number;
                /** @description 페이지당 수 (기본값: 10) */
                size?: number;
            };
            header?: never;
            path: {
                /** @description 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 사용자의 게시글 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            posts?: {
                                id?: string;
                                content?: string;
                                likeCount?: number;
                                createdAt?: string;
                                updatedAt?: string;
                                commentCount?: number;
                            }[];
                        };
                        meta?: {
                            /** @description 전체 항목 수 */
                            totalCount: number;
                            /** @description 전체 페이지 수 */
                            pageCount: number;
                            /** @description 현재 페이지 */
                            currentPage: number;
                            /** @description 페이지당 항목 수 */
                            pageSize: number;
                        };
                    };
                };
            };
            /** @description 비공개 사용자의 게시글에 접근하기 위해 인증이 필요함 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 비공개 사용자의 게시글에 접근할 수 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 존재하지 않는 사용자 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PrivateController_getUserIsPrivate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 사용자 공개 여부 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            isPrivate?: boolean;
                        };
                    };
                };
            };
            /** @description 존재하지 않는 사용자 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    PrivateController_updateUserPrivacy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        /** @description 사용자 공개 여부 수정 정보 */
        requestBody: {
            content: {
                "application/json": components["schemas"];
            };
        };
        responses: {
            /** @description 사용자 공개 여부 수정 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                    };
                };
            };
            /** @description 인증되지 않은 사용자 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BlockController_blockUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description 차단할 사용자 ID */
        requestBody: {
            content: {
                "application/json": {
                    /** @description 차단할 사용자 ID */
                    targetId?: string;
                };
            };
        };
        responses: {
            /** @description 사용자 차단 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                    };
                };
            };
            /** @description 이미 차단된 사용자 */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    BlockController_unblockUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description 차단 해제할 사용자 ID */
        requestBody: {
            content: {
                "application/json": {
                    /** @description 차단 해제할 사용자 ID */
                    targetId?: string;
                };
            };
        };
        responses: {
            /** @description 사용자 차단 해제 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                    };
                };
            };
            /** @description 차단되지 않은 사용자 */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UserController_getMyInfo: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 사용자 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            id?: string;
                            name?: string;
                            image?: string | null;
                            /** Format: email */
                            email?: string;
                            /** Format: date-time */
                            emailVerified?: string | null;
                            followingCount?: number;
                            followerCount?: number;
                            postCount?: number;
                            /** @enum {string} */
                            role?: "ADMIN" | "USER";
                            /** Format: date-time */
                            createdAt?: string;
                            /** Format: date-time */
                            updatedAt?: string;
                        };
                    };
                };
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UserController_getUserById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 사용자 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            id?: string;
                            name?: string;
                            image?: string | null;
                            /** Format: email */
                            email?: string;
                            /** Format: date-time */
                            emailVerified?: string | null;
                            followingCount?: number;
                            followerCount?: number;
                            postCount?: number;
                            /** @enum {string} */
                            role?: "ADMIN" | "USER";
                            /** Format: date-time */
                            createdAt?: string;
                            /** Format: date-time */
                            updatedAt?: string;
                        };
                    };
                };
            };
            /** @description 비공개 사용자 조회는 인증이 요구됨 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 비공개 사용자의 경우, 팔로우한 사용자만 조회 가능 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UserController_deleteUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 사용자 삭제 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            id?: string;
                            name?: string;
                            image?: string | null;
                            /** Format: email */
                            email?: string;
                        };
                    };
                };
            };
            /** @description 인증되지 않은 사용자 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    UserController_updateUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        /** @description 사용자 수정 정보 */
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateUserDto"];
            };
        };
        responses: {
            /** @description 사용자 수정 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                    };
                };
            };
            /** @description 인증되지 않은 사용자 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommentController_updateComment: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description 댓글 수정 요청 데이터 */
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateCommentDto"];
            };
        };
        responses: {
            /** @description 댓글 수정 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            commentId?: string;
                        };
                        /** @example 댓글이 성공적으로 수정되었습니다. */
                        message?: string;
                    };
                };
            };
            /** @description 잘못된 요청 형식입니다. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 존재하지 않는 댓글입니다. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommentController_createComment: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description 댓글 생성 요청 데이터 */
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateCommentDto"];
            };
        };
        responses: {
            /** @description 댓글 생성 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            commentId?: string;
                            postId?: string;
                            authorId?: string;
                        };
                    };
                };
            };
            /** @description 잘못된 요청 형식입니다. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 존재하지 않는 게시물입니다. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommentController_getCommentById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 조회할 댓글의 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 댓글 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            id?: string;
                            content?: string;
                            likesCount?: number;
                            /** Format: date-time */
                            createdAt?: string;
                            /** Format: date-time */
                            updatedAt?: string;
                            postId?: string;
                            author?: {
                                id?: string;
                                name?: string;
                                image?: string | null;
                            };
                            parent?: {
                                id?: string;
                                content?: string;
                                likesCount?: number;
                                /** Format: date-time */
                                createdAt?: string;
                                /** Format: date-time */
                                updatedAt?: string;
                                author?: {
                                    id?: string;
                                    name?: string;
                                    image?: string | null;
                                };
                            } | null;
                        };
                    };
                };
            };
            /** @description 존재하지 않는 댓글입니다. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommentController_deleteComment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 삭제할 댓글의 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 댓글 삭제 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            content?: string;
                            postId?: string;
                            authorId?: string;
                        };
                    };
                };
            };
            /** @description 존재하지 않는 댓글입니다. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommentController_getCommentReplies: {
        parameters: {
            query?: {
                /** @description 페이지 번호 (기본값: 1) */
                page?: number;
                /** @description 페이지당 수 (기본값: 10) */
                size?: number;
            };
            header?: never;
            path: {
                /** @description 조회할 댓글의 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 댓글 답글 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            replies?: {
                                id?: string;
                                content?: string;
                                likesCount?: number;
                                /** Format: date-time */
                                createdAt?: string;
                                /** Format: date-time */
                                updatedAt?: string;
                                author?: {
                                    id?: string;
                                    name?: string;
                                    image?: string | null;
                                };
                            }[];
                        };
                        meta?: {
                            /** @description 전체 항목 수 */
                            totalCount: number;
                            /** @description 전체 페이지 수 */
                            pageCount: number;
                            /** @description 현재 페이지 */
                            currentPage: number;
                            /** @description 페이지당 항목 수 */
                            pageSize: number;
                        };
                    };
                };
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommentController_toggleCommentLike: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 좋아요/싫어요를 토글할 댓글의 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 댓글 좋아요/싫어요 토글 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        message?: string;
                        data?: {
                            /** @enum {string} */
                            status?: "PLUS" | "MINUS";
                            commentId?: string;
                        };
                    };
                };
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommentController_createCommentReply: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description 답글 생성 요청 데이터 */
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReplyContentDto"];
            };
        };
        responses: {
            /** @description 답글 생성 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            replyId?: string;
                            postId?: string;
                            authorId?: string;
                        };
                    };
                };
            };
            /** @description 잘못된 요청 형식입니다. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 존재하지 않는 댓글이나 게시물입니다. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommentController_getCommentsByPostId: {
        parameters: {
            query?: {
                /** @description 페이지 번호 (기본값: 1) */
                page?: number;
                /** @description 페이지당 수 (기본값: 10) */
                size?: number;
            };
            header?: never;
            path: {
                /** @description 댓글을 조회할 게시물의 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 댓글 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            postId?: string;
                            comments?: {
                                id?: string;
                                content?: string;
                                likesCount?: number;
                                author?: {
                                    id?: string;
                                    name?: string;
                                    image?: string | null;
                                };
                                /** Format: date-time */
                                createdAt?: string;
                                /** Format: date-time */
                                updatedAt?: string;
                            }[];
                        };
                        meta?: {
                            /** @description 전체 항목 수 */
                            totalCount: number;
                            /** @description 전체 페이지 수 */
                            pageCount: number;
                            /** @description 현재 페이지 */
                            currentPage: number;
                            /** @description 페이지당 항목 수 */
                            pageSize: number;
                        };
                    };
                };
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CommentController_getCommentsByUserId: {
        parameters: {
            query?: {
                /** @description 페이지 번호 (기본값: 1) */
                page?: number;
                /** @description 페이지당 수 (기본값: 10) */
                size?: number;
            };
            header?: never;
            path: {
                /** @description 댓글을 조회할 사용자의 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 사용자의 댓글 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            comments?: {
                                id?: string;
                                content?: string;
                                likesCount?: number;
                                /** Format: date-time */
                                createdAt?: string;
                                /** Format: date-time */
                                updatedAt?: string;
                                post?: {
                                    id?: string;
                                    content?: string;
                                    likeCount?: number;
                                    /** Format: date-time */
                                    createdAt?: string;
                                    /** Format: date-time */
                                    updatedAt?: string;
                                };
                            }[];
                        };
                        meta?: {
                            /** @description 전체 항목 수 */
                            totalCount: number;
                            /** @description 전체 페이지 수 */
                            pageCount: number;
                            /** @description 현재 페이지 */
                            currentPage: number;
                            /** @description 페이지당 항목 수 */
                            pageSize: number;
                        };
                    };
                };
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FollowController_toggleFollowUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 팔로우할 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 팔로우/언팔로우 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            targetId?: string;
                            /** @enum {string} */
                            status?: "FOLLOW" | "UNFOLLOW";
                        };
                    };
                };
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FollowController_sendFollowRequest: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 팔로우 요청할 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 팔로우 요청 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            targetId?: string;
                        };
                    };
                };
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FollowController_rejectFollowRequest: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 팔로우 요청을 거절할 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 팔로우 요청 거절 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            targetId?: string;
                        };
                    };
                };
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FollowController_getUserFollowingCount: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 사용자의 팔로잉 수 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            followingCount?: number;
                        };
                    };
                };
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FollowController_getUserFollowersCount: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 사용자의 팔로워 수 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            followersCount?: number;
                        };
                    };
                };
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FollowController_getUserFollowers: {
        parameters: {
            query?: {
                /** @description 페이지 번호 (기본값: 1) */
                page?: number;
                /** @description 페이지당 수 (기본값: 10) */
                size?: number;
            };
            header?: never;
            path: {
                /** @description 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 사용자의 팔로워 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            followers?: {
                                id?: string;
                                name?: string;
                                image?: string | null;
                            }[];
                        };
                        meta?: {
                            /** @description 전체 항목 수 */
                            totalCount: number;
                            /** @description 전체 페이지 수 */
                            pageCount: number;
                            /** @description 현재 페이지 */
                            currentPage: number;
                            /** @description 페이지당 항목 수 */
                            pageSize: number;
                        };
                    };
                };
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    FollowController_getUserFollowing: {
        parameters: {
            query?: {
                /** @description 페이지 번호 (기본값: 1) */
                page?: number;
                /** @description 페이지당 수 (기본값: 10) */
                size?: number;
            };
            header?: never;
            path: {
                /** @description 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 사용자의 팔로잉 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            following?: {
                                id?: string;
                                name?: string;
                                image?: string | null;
                            }[];
                        };
                        meta?: {
                            /** @description 전체 항목 수 */
                            totalCount: number;
                            /** @description 전체 페이지 수 */
                            pageCount: number;
                            /** @description 현재 페이지 */
                            currentPage: number;
                            /** @description 페이지당 항목 수 */
                            pageSize: number;
                        };
                    };
                };
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_register: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description 회원가입 정보 */
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterUserDto"];
            };
        };
        responses: {
            /** @description 회원가입 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            id?: string;
                            /** @enum {enum} */
                            role?: "USER" | "ADMIN";
                            accessToken?: string;
                        };
                    };
                };
            };
            /** @description 이미 사용 중인 이메일입니다 */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description 로그인 정보 */
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginUserDto"];
            };
        };
        responses: {
            /** @description 로그인 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            id?: string;
                            /** @enum {enum} */
                            role?: "USER" | "ADMIN";
                            accessToken?: string;
                        };
                    };
                };
            };
            /** @description 잘못된 비밀번호입니다 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 잘못된 이메일입니다 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_logout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 로그아웃 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                    };
                };
            };
            /** @description 토큰이 유효하지 않습니다 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 토큰이 존재하지 않습니다 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_refresh: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 토큰 갱신 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                    };
                };
            };
            /** @description 토큰이 유효하지 않습니다 */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 토큰이 존재하지 않습니다 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    HealthController_check: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The Health Check is successful */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example ok */
                        status?: string;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        info?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {} */
                        error?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        details?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
            /** @description The Health Check is not successful */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @example error */
                        status?: string;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       }
                         *     } */
                        info?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "redis": {
                         *         "status": "down",
                         *         "message": "Could not connect"
                         *       }
                         *     } */
                        error?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        } | null;
                        /** @example {
                         *       "database": {
                         *         "status": "up"
                         *       },
                         *       "redis": {
                         *         "status": "down",
                         *         "message": "Could not connect"
                         *       }
                         *     } */
                        details?: {
                            [key: string]: {
                                status: string;
                            } & {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
            };
        };
    };
    NotifyController_readAllNotifiesByUserId: {
        parameters: {
            query?: {
                /** @description 페이지 번호 (기본값: 1) */
                page?: number;
                /** @description 페이지당 수 (기본값: 10) */
                size?: number;
            };
            header?: never;
            path: {
                /** @description 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 사용자 알람 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            notifies?: {
                                id?: string;
                                /** @enum {string} */
                                type?: "COMMENT_LIKE" | "COMMENT_REPLY" | "FOLLOW" | "MESSAGE" | "POST_COMMENT" | "POST_LIKE" | "SYSTEM";
                                image?: string | null;
                                title?: string;
                                content?: string;
                                isRead?: boolean;
                                /** Format: date-time */
                                createdAt?: string;
                                user?: {
                                    id?: string;
                                    name?: string;
                                };
                                postId?: string | null;
                                commentId?: string | null;
                                follower?: {
                                    id?: string;
                                    name?: string;
                                };
                            }[];
                            meta?: {
                                /** @description 전체 항목 수 */
                                totalCount: number;
                                /** @description 전체 페이지 수 */
                                pageCount: number;
                                /** @description 현재 페이지 */
                                currentPage: number;
                                /** @description 페이지당 항목 수 */
                                pageSize: number;
                            };
                        };
                    };
                };
            };
            /** @description 다른 사용자의 알람을 조회할 수 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NotifyController_getNotifiesByUserId: {
        parameters: {
            query?: {
                /** @description 페이지 번호 (기본값: 1) */
                page?: number;
                /** @description 페이지당 수 (기본값: 10) */
                size?: number;
            };
            header?: never;
            path: {
                /** @description 사용자 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 사용자 알람 목록 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            notifies?: {
                                id?: string;
                                /** @enum {string} */
                                type?: "COMMENT_LIKE" | "COMMENT_REPLY" | "FOLLOW" | "MESSAGE" | "POST_COMMENT" | "POST_LIKE" | "SYSTEM";
                                image?: string | null;
                                title?: string;
                                content?: string;
                                isRead?: boolean;
                                /** Format: date-time */
                                createdAt?: string;
                                user?: {
                                    id?: string;
                                    name?: string;
                                };
                                postId?: string | null;
                                commentId?: string | null;
                                follower?: {
                                    id?: string;
                                    name?: string;
                                };
                            }[];
                            meta?: {
                                /** @description 전체 항목 수 */
                                totalCount: number;
                                /** @description 전체 페이지 수 */
                                pageCount: number;
                                /** @description 현재 페이지 */
                                currentPage: number;
                                /** @description 페이지당 항목 수 */
                                pageSize: number;
                            };
                        };
                    };
                };
            };
            /** @description 다른 사용자의 알람을 조회할 수 없음 */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 사용자를 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NotifyController_getNotifyById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 알람 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 알람 상세 정보 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            /** @enum {string} */
                            type?: "COMMENT_LIKE" | "COMMENT_REPLY" | "FOLLOW" | "MESSAGE" | "POST_COMMENT" | "POST_LIKE" | "SYSTEM";
                            image?: string | null;
                            title?: string;
                            content?: string;
                            isRead?: boolean;
                            /** Format: date-time */
                            createdAt?: string;
                            user?: {
                                id?: string;
                                name?: string;
                            };
                            postId?: string | null;
                            commentId?: string | null;
                            followerId?: string | null;
                        };
                    };
                };
            };
            /** @description 알람을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NotifyController_readNotifyById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 알람 ID */
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 알람 상세 정보 조회 성공 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        success?: boolean;
                        data?: {
                            /** @enum {string} */
                            type?: "COMMENT_LIKE" | "COMMENT_REPLY" | "FOLLOW" | "MESSAGE" | "POST_COMMENT" | "POST_LIKE" | "SYSTEM";
                            image?: string | null;
                            title?: string;
                            content?: string;
                            isRead?: boolean;
                            /** Format: date-time */
                            createdAt?: string;
                            user?: {
                                id?: string;
                                name?: string;
                            };
                            postId?: string | null;
                            commentId?: string | null;
                            followerId?: string | null;
                        };
                    };
                };
            };
            /** @description 알람을 찾을 수 없음 */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description 서버 오류 */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    NotifySseController_stream: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
